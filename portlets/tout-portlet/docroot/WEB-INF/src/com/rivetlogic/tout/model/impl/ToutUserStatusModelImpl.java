/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rivetlogic.tout.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.rivetlogic.tout.model.ToutUserStatus;
import com.rivetlogic.tout.model.ToutUserStatusModel;
import com.rivetlogic.tout.service.persistence.ToutUserStatusPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ToutUserStatus service. Represents a row in the &quot;rivetlogic_tout_ToutUserStatus&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.rivetlogic.tout.model.ToutUserStatusModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ToutUserStatusImpl}.
 * </p>
 *
 * @author ronny.vargas
 * @see ToutUserStatusImpl
 * @see com.rivetlogic.tout.model.ToutUserStatus
 * @see com.rivetlogic.tout.model.ToutUserStatusModel
 * @generated
 */
public class ToutUserStatusModelImpl extends BaseModelImpl<ToutUserStatus>
	implements ToutUserStatusModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Tout Portlet Status by User model instance should use the {@link com.rivetlogic.tout.model.ToutUserStatus} interface instead.
	 */
	public static final String TABLE_NAME = "rivetlogic_tout_ToutUserStatus";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "toutConfigId", Types.VARCHAR },
			{ "articleId", Types.BIGINT },
			{ "toutDismissed", Types.BOOLEAN },
			{ "toutSeen", Types.BOOLEAN },
			{ "reminderDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table rivetlogic_tout_ToutUserStatus (userId LONG not null,toutConfigId VARCHAR(75) not null,articleId LONG,toutDismissed BOOLEAN,toutSeen BOOLEAN,reminderDate DATE null,primary key (userId, toutConfigId))";
	public static final String TABLE_SQL_DROP = "drop table rivetlogic_tout_ToutUserStatus";
	public static final String ORDER_BY_JPQL = " ORDER BY toutUserStatus.id.userId ASC, toutUserStatus.id.toutConfigId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY rivetlogic_tout_ToutUserStatus.userId ASC, rivetlogic_tout_ToutUserStatus.toutConfigId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rivetlogic.tout.model.ToutUserStatus"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rivetlogic.tout.model.ToutUserStatus"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.rivetlogic.tout.model.ToutUserStatus"));

	public ToutUserStatusModelImpl() {
	}

	@Override
	public ToutUserStatusPK getPrimaryKey() {
		return new ToutUserStatusPK(_userId, _toutConfigId);
	}

	@Override
	public void setPrimaryKey(ToutUserStatusPK primaryKey) {
		setUserId(primaryKey.userId);
		setToutConfigId(primaryKey.toutConfigId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ToutUserStatusPK(_userId, _toutConfigId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ToutUserStatusPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ToutUserStatus.class;
	}

	@Override
	public String getModelClassName() {
		return ToutUserStatus.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("toutConfigId", getToutConfigId());
		attributes.put("articleId", getArticleId());
		attributes.put("toutDismissed", getToutDismissed());
		attributes.put("toutSeen", getToutSeen());
		attributes.put("reminderDate", getReminderDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String toutConfigId = (String)attributes.get("toutConfigId");

		if (toutConfigId != null) {
			setToutConfigId(toutConfigId);
		}

		Long articleId = (Long)attributes.get("articleId");

		if (articleId != null) {
			setArticleId(articleId);
		}

		Boolean toutDismissed = (Boolean)attributes.get("toutDismissed");

		if (toutDismissed != null) {
			setToutDismissed(toutDismissed);
		}

		Boolean toutSeen = (Boolean)attributes.get("toutSeen");

		if (toutSeen != null) {
			setToutSeen(toutSeen);
		}

		Date reminderDate = (Date)attributes.get("reminderDate");

		if (reminderDate != null) {
			setReminderDate(reminderDate);
		}
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getToutConfigId() {
		if (_toutConfigId == null) {
			return StringPool.BLANK;
		}
		else {
			return _toutConfigId;
		}
	}

	@Override
	public void setToutConfigId(String toutConfigId) {
		_toutConfigId = toutConfigId;
	}

	@Override
	public long getArticleId() {
		return _articleId;
	}

	@Override
	public void setArticleId(long articleId) {
		_articleId = articleId;
	}

	@Override
	public boolean getToutDismissed() {
		return _toutDismissed;
	}

	@Override
	public boolean isToutDismissed() {
		return _toutDismissed;
	}

	@Override
	public void setToutDismissed(boolean toutDismissed) {
		_toutDismissed = toutDismissed;
	}

	@Override
	public boolean getToutSeen() {
		return _toutSeen;
	}

	@Override
	public boolean isToutSeen() {
		return _toutSeen;
	}

	@Override
	public void setToutSeen(boolean toutSeen) {
		_toutSeen = toutSeen;
	}

	@Override
	public Date getReminderDate() {
		return _reminderDate;
	}

	@Override
	public void setReminderDate(Date reminderDate) {
		_reminderDate = reminderDate;
	}

	@Override
	public ToutUserStatus toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ToutUserStatus)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ToutUserStatusImpl toutUserStatusImpl = new ToutUserStatusImpl();

		toutUserStatusImpl.setUserId(getUserId());
		toutUserStatusImpl.setToutConfigId(getToutConfigId());
		toutUserStatusImpl.setArticleId(getArticleId());
		toutUserStatusImpl.setToutDismissed(getToutDismissed());
		toutUserStatusImpl.setToutSeen(getToutSeen());
		toutUserStatusImpl.setReminderDate(getReminderDate());

		toutUserStatusImpl.resetOriginalValues();

		return toutUserStatusImpl;
	}

	@Override
	public int compareTo(ToutUserStatus toutUserStatus) {
		ToutUserStatusPK primaryKey = toutUserStatus.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ToutUserStatus)) {
			return false;
		}

		ToutUserStatus toutUserStatus = (ToutUserStatus)obj;

		ToutUserStatusPK primaryKey = toutUserStatus.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ToutUserStatus> toCacheModel() {
		ToutUserStatusCacheModel toutUserStatusCacheModel = new ToutUserStatusCacheModel();

		toutUserStatusCacheModel.userId = getUserId();

		toutUserStatusCacheModel.toutConfigId = getToutConfigId();

		String toutConfigId = toutUserStatusCacheModel.toutConfigId;

		if ((toutConfigId != null) && (toutConfigId.length() == 0)) {
			toutUserStatusCacheModel.toutConfigId = null;
		}

		toutUserStatusCacheModel.articleId = getArticleId();

		toutUserStatusCacheModel.toutDismissed = getToutDismissed();

		toutUserStatusCacheModel.toutSeen = getToutSeen();

		Date reminderDate = getReminderDate();

		if (reminderDate != null) {
			toutUserStatusCacheModel.reminderDate = reminderDate.getTime();
		}
		else {
			toutUserStatusCacheModel.reminderDate = Long.MIN_VALUE;
		}

		return toutUserStatusCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", toutConfigId=");
		sb.append(getToutConfigId());
		sb.append(", articleId=");
		sb.append(getArticleId());
		sb.append(", toutDismissed=");
		sb.append(getToutDismissed());
		sb.append(", toutSeen=");
		sb.append(getToutSeen());
		sb.append(", reminderDate=");
		sb.append(getReminderDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.rivetlogic.tout.model.ToutUserStatus");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toutConfigId</column-name><column-value><![CDATA[");
		sb.append(getToutConfigId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>articleId</column-name><column-value><![CDATA[");
		sb.append(getArticleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toutDismissed</column-name><column-value><![CDATA[");
		sb.append(getToutDismissed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toutSeen</column-name><column-value><![CDATA[");
		sb.append(getToutSeen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reminderDate</column-name><column-value><![CDATA[");
		sb.append(getReminderDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ToutUserStatus.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ToutUserStatus.class
		};
	private long _userId;
	private String _userUuid;
	private String _toutConfigId;
	private long _articleId;
	private boolean _toutDismissed;
	private boolean _toutSeen;
	private Date _reminderDate;
	private ToutUserStatus _escapedModel;
}